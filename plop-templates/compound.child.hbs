import { cn } from "@lib/utils"
import { cva, type VariantProps } from "class-variance-authority"

export const {{ pascalCase childName }}: React.FC<{{ pascalCase childName }}Props> = ({ children, className, variant }) => {
  const styles = mergeClass(variants({ variant }), className)

  return (
    <div data-{{layer}}="{{kebabCase rootName}}" data-child="{{kebabCase childName}}" className={styles}>
      {children || "{{ pascalCase childName }} Child Component"}
    </div>
  )
}

// cva(base tailwind classes, {variants, defaultVariants})
const variants = cva("", {
  variants: {
    variant: {
      primary: "",
    },
  },
  defaultVariants: {
    variant: "primary",
  },
})

export type {{pascalCase childName}}Props = {
  children?: React.ReactNode;
  className?: string;
} & VariantProps<typeof variants>